from pyrogram import filters
from pyrogram.types import Message

from config import BANNED_USERS, MONGO_DB_URI, OWNER_ID, MUSIC_BOT_NAME
from strings import get_command
from ShizukaXMusic import app
from ShizukaXMusic.misc import SUDOERS
from ShizukaXMusic.utils.database import add_sudo, remove_sudo
from ShizukaXMusic.utils.decorators.language import language

# Command
ADDSUDO_COMMAND = get_command("ADDSUDO_COMMAND")
DELSUDO_COMMAND = get_command("DELSUDO_COMMAND")
SUDOUSERS_COMMAND = get_command("SUDOUSERS_COMMAND")


@app.on_message(filters.command(ADDSUDO_COMMAND) & filters.user(OWNER_ID))
@language
async def useradd(client, message: Message, _):
    if MONGO_DB_URI is None:
        return await message.reply_text(
            "**·¥Ö·¥ú·¥á ·¥õ·¥è {MUSIC_BOT_NAME}'s ·¥© Ä…™·¥†·¥Ä·¥Ñ è …™ss·¥ú·¥ás,  è·¥è·¥ú ·¥Ñ·¥Ä…¥'·¥õ ·¥ç·¥Ä…¥·¥Ä…¢·¥á s·¥ú·¥Ö·¥è ·¥ús·¥á Äs ·¥è…¥ {MUSIC_BOT_NAME} ·¥Ö·¥Ä·¥õ·¥Ä ô·¥Äs·¥á.\n\n ·¥© ü·¥á·¥Äs·¥á ·¥Ä·¥Ö·¥Ö  è·¥è·¥ú Ä ·¥ç·¥è…¥…¢·¥è ·¥Ö·¥Ä·¥õ·¥Ä ô·¥Äs·¥á …™…¥ ·¥†·¥Ä Äs ·¥õ·¥è ·¥ús·¥á ·¥õ ú…™s “ì·¥á·¥Ä·¥õ·¥ú Ä·¥á.**"
        )
    if not message.reply_to_message:
        if len(message.command) != 2:
            return await message.reply_text(_["auth_1"])
        user = message.text.split(None, 1)[1]
        if "@" in user:
            user = user.replace("@", "")
        user = await app.get_users(user)
        if user.id in SUDOERS:
            return await message.reply_text(_["sudo_1"].format(user.mention))
        added = await add_sudo(user.id)
        if added:
            SUDOERS.add(user.id)
            await message.reply_text(_["sudo_2"].format(user.mention))
        else:
            await message.reply_text("“ì·¥Ä…™ ü·¥á·¥Ö.")
        return
    if message.reply_to_message.from_user.id in SUDOERS:
        return await message.reply_text(
            _["sudo_1"].format(message.reply_to_message.from_user.mention)
        )
    added = await add_sudo(message.reply_to_message.from_user.id)
    if added:
        SUDOERS.add(message.reply_to_message.from_user.id)
        await message.reply_text(
            _["sudo_2"].format(message.reply_to_message.from_user.mention)
        )
    else:
        await message.reply_text("“ì·¥Ä…™ ü·¥á·¥Ö.")
    return


@app.on_message(filters.command(DELSUDO_COMMAND) & filters.user(OWNER_ID))
@language
async def userdel(client, message: Message, _):
    if MONGO_DB_URI is None:
        return await message.reply_text(
            "**·¥Ö·¥ú·¥á ·¥õ·¥è {MUSIC_BOT_NAME}'s ·¥© Ä…™·¥†·¥Ä·¥Ñ è …™ss·¥ú·¥ás,  è·¥è·¥ú ·¥Ñ·¥Ä…¥'·¥õ ·¥ç·¥Ä…¥·¥Ä…¢·¥á s·¥ú·¥Ö·¥è ·¥ús·¥á Äs ·¥è…¥ {MUSIC_BOT_NAME} ·¥Ö·¥Ä·¥õ·¥Ä ô·¥Äs·¥á.\n\n ·¥© ü·¥á·¥Äs·¥á ·¥Ä·¥Ö·¥Ö  è·¥è·¥ú Ä ·¥ç·¥è…¥…¢·¥è ·¥Ö·¥Ä·¥õ·¥Ä ô·¥Äs·¥á …™…¥ ·¥†·¥Ä Äs ·¥õ·¥è ·¥ús·¥á ·¥õ ú…™s “ì·¥á·¥Ä·¥õ·¥ú Ä·¥á.**"
        )
    if not message.reply_to_message:
        if len(message.command) != 2:
            return await message.reply_text(_["auth_1"])
        user = message.text.split(None, 1)[1]
        if "@" in user:
            user = user.replace("@", "")
        user = await app.get_users(user)
        if user.id not in SUDOERS:
            return await message.reply_text(_["sudo_3"])
        removed = await remove_sudo(user.id)
        if removed:
            SUDOERS.remove(user.id)
            await message.reply_text(_["sudo_4"])
            return
        await message.reply_text(f"Something wrong happened.")
        return
    user_id = message.reply_to_message.from_user.id
    if user_id not in SUDOERS:
        return await message.reply_text(_["sudo_3"])
    removed = await remove_sudo(user_id)
    if removed:
        SUDOERS.remove(user_id)
        await message.reply_text(_["sudo_4"])
        return
    await message.reply_text(f"s·¥è·¥ç·¥á·¥õ ú…™…¥…¢ ·¥°·¥á…¥·¥õ ·¥° Ä·¥è…¥…¢.")


@app.on_message(filters.command(SUDOUSERS_COMMAND) & ~BANNED_USERS)
@language
async def sudoers_list(client, message: Message, _):
    if message.from_user.id not in SUDOERS:
        return await message.reply_text(
            "¬ª **üòÅ  ú·¥á ú·¥á ú·¥á ·¥è…¥ ü è ·¥ç è ·¥õ·¥á·¥Ä·¥ç ·¥Ñ·¥Ä…¥ ·¥Ö·¥è ·¥õ ú…™s …¥…™…¢·¥Ä\n¬ª ü§´ ·¥Ñ·¥è·¥¢ ·¥Ä ü·¥áx·¥Ä ·¥Ö·¥è·¥ás…¥'·¥õ ·¥Ä ü·¥è·¥°  è·¥è·¥ú ·¥õ·¥è ·¥ò·¥á Ä“ì·¥è·¥ç·¥á ·¥õ ú…™s ·¥Ä·¥Ñ·¥õ…™·¥è…¥  ô·¥á·¥õ·¥õ·¥á Ä s·¥ú…¢…¢·¥ás·¥õ…™·¥è…¥ “ì·¥è Ä  è·¥è·¥ú ·¥õ·¥è ·¥ä·¥è…™…¥** @NothingBotz"
        )
    text = _["sudo_5"]
    count = 0
    for x in OWNER_ID:
        try:
            user = await app.get_users(x)
            user = user.first_name if not user.mention else user.mention
            count += 1
        except Exception:
            continue
        text += f"{count}‚û§ {user}\n"
    smex = 0
    for user_id in SUDOERS:
        if user_id not in OWNER_ID:
            try:
                user = await app.get_users(user_id)
                user = user.first_name if not user.mention else user.mention
                if smex == 0:
                    smex += 1
                    text += _["sudo_6"]
                count += 1
                text += f"{count}‚û§ {user}\n"
            except Exception:
                continue
    if not text:
        await message.reply_text(_["sudo_7"])
    else:
        await message.reply_text(text)
